
# Yum install #
sudo yum -y update  # (this takes a while)
sudo yum -y groupinstall "Development Tools"
sudo yum -y install git nginx vim wget

# Setup 'dev' user
sudo useradd dev

# Modify sudoers
sudo vim /etc/sudoers
# comment this line: %wheel  ALL=(ALL)
# uncomment this line: %wheel  ALL=(ALL)       NOPASSWD: ALL
sudo usermod -a -G wheel dev

# Update authorized_keys
sudo su - dev
cd ~
mkdir -p .ssh
vim .ssh/authorized_keys # then paste in the contents of authorized_keys from an existing server
chmod 700 .ssh
chmod 400 .ssh/authorized_keys 

# Fix sshd_config
sudo vim /etc/ssh/sshd_config
# uncomment: RSAAuthentication yes
# uncomment: PubkeyAuthentication yes
# at the bottom, add this line:
    DenyUsers postgres

sudo service sshd restart

# Log out and back in as 'dev'

# Top level dirs #

sudo mkdir /kfly
sudo chown dev /kfly

# Git Checkout #

cd /kfly
git init
git remote add origin https://XXX@github.com/andyfischer/kidfriendly.git
  (where XXX is a token generated from Github.com)
git fetch origin
git checkout develop

Change .git/config to have:

[receive]
    denyCurrentBranch=false

# Install Node #

mkdir -p /kfly/3rdparty
cd 3rdparty
wget http://nodejs.org/dist/v0.10.31/node-v0.10.31.tar.gz
tar -xvf node-v0.10.31.tar.gz
cd node-v0.10.31
./configure
make
sudo make install

# Dev user account #

Add this to .bash_profile: PATH=$PATH:/kfly/server/bin

Install global node modules:

sudo npm install -g coffee-script grunt-cli

# Sudo setup #

sudo visudo
(add /usr/local/bin to secure_path)

# Symlinks #

  /etc/init/forever.conf -> /kfly/server/scripts/forever.conf
  /etc/profile.d/kfly.sh -> /kfly/server/scripts/profile.d.sh
  /etc/nginx/conf.d/kfly.conf -> /kfly/server/scripts/nginx.conf

# Updating upstart configuration #

sudo initctl reload-configuration

or just: ~/bin/init-reload

# Starting forever #
sudo start forever

# Postgres #
sudo yum install postgresql postgresql-server postgresql-devel postgresql-contrib postgresql-docs
sudo service postgresql initdb
sudo chkconfig postgres on

# Add 'dev' user to postgres
sudo su - postgres
createuser dev
exit

# Also, modify sshd config to block 'postgres' user
sudo vim /etc/ssh/sshd_config

add a line that says:

DenyUsers postgres
